Identifier  discriminant
Assign  :=
Number  10
Raise  **
Number  2
Minus  -
LeftParen  (
Number  4
Multiply  *
Number  5.5
Multiply  *
LeftParen  (
Minus  -
Number  3
RightParen  )
RightParen  )
Semicolon  ;
If  IF
Identifier  discriminant
GTEqual  >=
Number  0
Colon  :
Identifier  root1
Assign  :=
LeftParen  (
Minus  -
Number  10
Plus  +
Sqrt  SQRT
LeftParen  (
Identifier  discriminant
RightParen  )
RightParen  )
Divide  /
LeftParen  (
Number  2
Multiply  *
Number  5.5
RightParen  )
Semicolon  ;
Identifier  root2
Assign  :=
LeftParen  (
Minus  -
Number  10
Minus  -
Sqrt  SQRT
LeftParen  (
Identifier  discriminant
RightParen  )
RightParen  )
Divide  /
LeftParen  (
Number  2
Multiply  *
Number  5.5
RightParen  )
Semicolon  ;
Print  PRINT
LeftParen  (
String  "roots are"
Comma  ,
Identifier  root1
Comma  ,
Identifier  root2
RightParen  )
Semicolon  ;
Else  ELSE
Print  PRINT
LeftParen  (
String  "no real roots"
RightParen  )
Semicolon  ;
Endif  ENDIF
Semicolon  ;
Print  PRINT
LeftParen  (
String  "end of program"
RightParen  )
Semicolon  ;
[ "Identifier", "Assign", "Number", "Raise", "Number", "Minus", "LeftParen", "Number", "Multiply", "Number", "Multiply", "LeftParen", "Minus", "Number", "RightParen", "RightParen", "Semicolon", "If", "Identifier", "GTEqual", "Number", "Colon", "Identifier", "Assign", "LeftParen", "Minus", "Number", "Plus", "Sqrt", "LeftParen", "Identifier", "RightParen", "RightParen", "Divide", "LeftParen", "Number", "Multiply", "Number", "RightParen", "Semicolon", "Identifier", "Assign", "LeftParen", "Minus", "Number", "Minus", "Sqrt", "LeftParen", "Identifier", "RightParen", "RightParen", "Divide", "LeftParen", "Number", "Multiply", "Number", "RightParen", "Semicolon", "Print", "LeftParen", "String", "Comma", "Identifier", "Comma", "Identifier", "RightParen", "Semicolon", "Else", "Print", "LeftParen", "String", "RightParen", "Semicolon", "Endif", "Semicolon", "Print", "LeftParen", "String", "RightParen", "Semicolon", "EndOfFile" ]
